/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => BrowserFavoritesPlugin
});

module.exports = __toCommonJS(main_exports);

// Import required Obsidian modules
var import_obsidian = require("obsidian");
var path = require("path");

var DEFAULT_SETTINGS = {
    outputFolderPath: 'Browser Favorites'
};

// Class definitions using import_obsidian instead of obsidian
class FileUploadModal extends import_obsidian.Modal {
    constructor(app, onFileUpload) {
        super(app);
        this.onFileUpload = onFileUpload;
    }

    // [Rest of FileUploadModal implementation using import_obsidian instead of obsidian]
}

class BrowserFavoritesPlugin extends import_obsidian.Plugin {
    // [Rest of BrowserFavoritesPlugin implementation using import_obsidian instead of obsidian]
}

class BrowserFavoritesSettingTab extends import_obsidian.PluginSettingTab {
    // [Rest of BrowserFavoritesSettingTab implementation using import_obsidian instead of obsidian]
}

// [Rest of the code remains the same but using import_obsidian instead of obsidian]